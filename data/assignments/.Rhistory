subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(plot.caption = element_text(margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.1))
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA),family = "Roboto", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(plot.caption = element_text(margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.15))
ggsave("inflation2.png", dpi = 320, width = 8, height = 5)
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA),family = "Roboto", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(plot.caption = element_text(margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
ggsave("inflation2.png", dpi = 320, width = 8, height = 5)
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA),family = "Roboto", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(plot.caption = element_text(size = 10, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA),family = "Roboto", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA),family = "Roboto", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(plot.title = element_text(size = 14),
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA),family = "Roboto", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(plot.title = element_text(size = 14),
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
ggsave("inflation2.png", dpi = 320, width = 8, height = 5)
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA),family = "Roboto", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(plot.title = element_text(size = 16),
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
ggsave("inflation2.png", dpi = 320, width = 8, height = 5)
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA),family = "Roboto", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(plot.title = element_text(size = 16),
plot.title.position = "plot",
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
ggsave("inflation2.png", dpi = 320, width = 8, height = 5)
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA),family = "Roboto", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(plot.background = element_rect(fill = "white", color = NA),
plot.title = element_text(size = 16),
plot.title.position = "plot",
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
ggsave("inflation2.png", dpi = 320, width = 8, height = 5)
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA),family = "Roboto", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.background = element_rect(fill = "white", color = NA),
plot.title = element_text(size = 16),
plot.title.position = "plot",
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
ggsave("inflation2.png", dpi = 320, width = 8, height = 5)
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA), fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.background = element_rect(fill = "white", color = NA),
plot.title = element_text(size = 16),
plot.title.position = "plot",
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA), family = "Roboto Condensed", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2025-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.background = element_rect(fill = "white", color = NA),
plot.title = element_text(size = 16),
plot.title.position = "plot",
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
ggsave("inflation2.png", dpi = 320, width = 8, height = 5)
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA), family = "Roboto Condensed", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2024-01-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.background = element_rect(fill = "white", color = NA),
plot.title = element_text(size = 16),
plot.title.position = "plot",
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |> slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
xlim = c(as.Date("2023-01-01"), NA), family = "Roboto Condensed", fontface = "bold") +
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2024-06-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.background = element_rect(fill = "white", color = NA),
plot.title = element_text(size = 16),
plot.title.position = "plot",
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
ggsave("inflation2.png", dpi = 320, width = 8, height = 5)
ggsave("inflation.png", dpi = 320, width = 8, height = 5)
librarian::shelf(tidyverse, ggtext, eurostat, MetBrewer)
# Here are the new packages we will use
# remotes::install_github("https://github.com/jimjam-slam/ggflags")
librarian::shelf(ggflags, countrycode, sysfonts, showtext, ggrepel)
?get_eurostat
# Load data directly from Eurostat or load("06_labour.RData")
rawdat <- get_eurostat("une_rt_m", filters = list(geo = c("AT","DE","FR","ES","IT"), age = "TOTAL", sex = "T", s_adj = "SA", unit = "PC_ACT"), type = "label", time_format = "date")
# Shorten timeline and fix Germany label, add ISO2c code for flags
unemp <- rawdat |>
filter(time >= "2005-01-01") |>
drop_na() |>
mutate(geo = ifelse(str_detect(geo, "Germany"), "Germany", geo)) |>
left_join(countrycode::codelist |> select(country.name.en, iso2c), by = c("geo" = "country.name.en"))
# Create dataset for annotations
labunemp <- tribble(~geo, ~time, ~values, ~label,
"Austria", as.Date("2007-01-01"), 14, "The unemployment rate in Austria hit a historic high during the Covid-19 pandemic in June 2020.",
"Germany", as.Date("2013-01-01"), 10, "Unemployment in Germany has decreased substantially since 2005.",
"Spain", as.Date("2010-01-01"), 13, "During the economic crisis in 2013, Spain recorded alarming unemployment rates up to 26%.")
unemp |>
ggplot(aes(x = time, y= values, color = geo)) +
geom_hline(yintercept = 0, linewidth = 0.1, color = "gray40") +
geom_area(aes(fill = geo)) +
geom_line(linewidth = 0.6, aes(group = geo)) +
geom_label_repel(data = unemp |> slice_min(values, n=1, with_ties = F ,by = geo),
size = 2.5, nudge_y = -2, label.padding = unit(0.15,"lines"), family = "Roboto Condensed",
aes(label = glue::glue("Min: {round(values,1)}%")),
min.segment.length = unit(2, unit="pt"), segment.colour = "black",
segment.size = 0.3, arrow = arrow(type = "open", length = unit(0.01, "npc"))) +
geom_label_repel(data = unemp |> slice_max(values, n=1, with_ties = F ,by = geo),
size = 2.5, nudge_y = 2, label.padding = unit(0.15, "lines"), family = "Roboto Condensed",
aes(label = glue::glue("Max: {round(values,1)}%")),
min.segment.length = unit(2, unit="pt"), segment.colour = "black",
segment.size = 0.3, arrow = arrow(type = "open", length = unit(0.01, "npc"))) +
geom_flag(data = unemp |> slice_min(time, n=1), size = 6,
aes(x = as.Date("2011-01-01"), y = 32, country = tolower(iso2c))) +
geom_text(data = unemp |> slice_min(time, n=1), size = 4, hjust = 0, family = "Roboto Condensed",
aes(x = as.Date("2013-01-01"), y = 32, label = toupper(geo))) +
geom_text(data = labunemp, aes(label = str_wrap(label, width = 20)),
colour = ifelse(labunemp$geo == "Spain", "white", "gray20"),
lineheight = 0.9, hjust = 0, size = 2.6, family = "Roboto Condensed") +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_color_manual(values = colorspace::darken(met.brewer("Nattier")[5:1], 0.2)) +
scale_fill_manual(values = colorspace::lighten(met.brewer("Nattier")[5:1], 0.2)) +
facet_wrap(~geo, nrow = 1) +
labs(x = NULL, y = NULL,
title = "Looking for a job",
subtitle = "Unemployment rates 2005-2023, *seasonally adjusted*",
caption = "Data: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_blank(),
axis.text = element_text(family = "Roboto Condensed"),
plot.title = element_text(family = "Oswald", size = 24),
plot.subtitle = element_markdown(family = "Roboto Condensed", color = "gray40", size = 14,
margin = margin(b = 1, unit = "lines")),
plot.caption = element_text(family = "Roboto Condensed", color = "gray40", size = 7,
margin = margin(t = 1, unit = "lines")),
plot.title.position = "plot",
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2),
panel.spacing.x = unit(1, "lines"))
?geom_flag
library(tidyverse)
library(lubridate)
library(MetBrewer)
library(ggrepel)
library(gghighlight)
rawdata <- read.csv("inflation.csv")
inflation <- rawdata |>
select(geo, date = TIME_PERIOD, values = OBS_VALUE) |>
# Character into date format. Alternatively: mutate(date = as.Date(paste0(date, "-01")))
mutate(date = ymd(date, truncated = 2)) |>
filter(date < "2023-01-01")
inflation |>
ggplot(aes(x = date, y = values, group = geo, colour = geo)) +
# Line plot with defined line width
geom_line(linewidth = 0.5) +
# Highlight only selected countries, do not use direct labels and specify how the unhighlighted lines should look like (thin and gray)
gghighlight(geo %in% c("AT","ES","HU"), use_direct_label = F,
unhighlighted_params = list(linewidth = 0.2, color = "gray80")) +
# Manually created the labels (non-overlapping with ggrepel) and print them at the maximum date on the x-axis. The labels are composed with the glue package.
geom_text_repel(data = inflation |> filter(geo %in% c("AT","ES","HU")) |>
slice_max(date), size = 3,
aes(x=date, y=values, label = glue::glue("{geo}: {values}%"), color = geo),
# The xlim command tells ggplot in which range the labels should be plotted. The NA in the second place just means no limit on the right.
xlim = c(as.Date("2023-01-01"), NA),
family = "Roboto Condensed", fontface = "bold") +
# We can change the order of the color palette with []; We don't need a legend (guide_none), but alternatively you can specify the theme(legend.position = "none") below
scale_color_manual(values = met.brewer("Lakota")[c(4,5,3)], guide = guide_none()) +
# Y-axis with percentage symbols
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
# Let's expand the limits of the x-axis to 2024, but the breaks should end with 2020; the labels are then set to %Y to show years!
scale_x_date(expand = c(0, 0),
limits = c(as.Date("2010-01-01"), as.Date("2024-06-01")),
breaks = seq(as.Date("2010-01-01"), as.Date("2020-01-01"), by = "5 years"),
labels = scales::date_format(format = "%Y")) +
labs(x = NULL, y = NULL, title = "Inflation in the European Union",
subtitle = "Annual change in the Harmonized Consumer Prices Index 2010-2022",
caption = "Source: Eurostat. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.background = element_rect(fill = "white", color = NA),
plot.title = element_text(size = 16),
plot.title.position = "plot",
plot.caption = element_text(size = 7, margin = margin(t=5, unit = "pt")),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2))
unemp <- rawdat |>
filter(time >= "2005-01-01") |>
drop_na() |>
mutate(geo = ifelse(str_detect(geo, "Germany"), "Germany", geo)) |>
left_join(countrycode::codelist |> select(country.name.en, iso2c), by = c("geo" = "country.name.en"))
# Create dataset for annotations
# With "tribble" you can create a dataframe where the first row are the column names with a tilde, and then each row is a row in the dataframe
labunemp <- tribble(~geo, ~time, ~values, ~label,
"Austria", as.Date("2007-01-01"), 14, "The unemployment rate in Austria hit a historic high during the Covid-19 pandemic in June 2020.",
"Germany", as.Date("2013-01-01"), 10, "Unemployment in Germany has decreased substantially since 2005.",
"Spain", as.Date("2010-01-01"), 13, "During the economic crisis in 2013, Spain recorded alarming unemployment rates up to 26%.")
# Add Google Font for the labels
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_add_google("Oswald", family = "Oswald")
# When loading fonts from Google, don't forget the following command!
showtext_auto()
showtext_opts(dpi = 320)
unemp |>
ggplot(aes(x = time, y= values, color = geo)) +
geom_hline(yintercept = 0, linewidth = 0.1, color = "gray40") +
geom_area(aes(fill = geo)) +
geom_line(linewidth = 0.6, aes(group = geo)) +
# We take only the minimum values per country (slice_min by geo) and create non-overlapping labels with the ggrepel package. If you do not like the glue-package you can create the labels with paste0: label = paste0("Min:", round(values,1), "%").
geom_label_repel(data = unemp |> slice_min(values, n=1, with_ties = F ,by = geo),
size = 2.5, nudge_y = -2, label.padding = unit(0.15,"lines"),
family = "Roboto Condensed",
aes(label = glue::glue("Min: {round(values,1)}%")),
min.segment.length = unit(2, unit="pt"), segment.colour = "black",
segment.size = 0.3, arrow = arrow(type = "open", length = unit(0.01, "npc"))) +
# Let's do the same with the maximum values. The segment options define the line between the label and the data point. We also include an arrow!
geom_label_repel(data = unemp |> slice_max(values, n=1, with_ties = F ,by = geo),
size = 2.5, nudge_y = 2, label.padding = unit(0.15, "lines"),
family = "Roboto Condensed",
aes(label = glue::glue("Max: {round(values,1)}%")),
min.segment.length = unit(2, unit="pt"), segment.colour = "black",
segment.size = 0.3, arrow = arrow(type = "open", length = unit(0.01, "npc"))) +
# ggflags needs 2-digit country codes (that we take from countrycode::codelist above). These should be in small letters, so we execute tolower(iso2c)!
geom_flag(data = unemp |> slice_min(time, n=1), size = 6,
aes(x = as.Date("2011-01-01"), y = 32, country = tolower(iso2c))) +
# Now we add the country names. We need each name only once, that's why we slice the dataframe. As we want the country in capital letters, we execute toupper(geo)
geom_text(data = unemp |> slice_min(time, n=1), size = 4, hjust = 0,
family = "Roboto Condensed",
aes(x = as.Date("2013-01-01"), y = 32, label = toupper(geo))) +
# Annotate the figure with the labels in the dataframe created above. We want the text to be gray with the exception of Spain where the color should be white.
geom_text(data = labunemp, aes(label = str_wrap(label, width = 20)),
colour = ifelse(labunemp$geo == "Spain", "white", "gray20"),
lineheight = 0.9, hjust = 0, size = 2.6, family = "Roboto Condensed") +
# Have percentage symbols on the y-axis
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
# With the colorspace package we can "darken" or "lighten" color palettes! Here the fill scale of the area chart is lighter, the color of the lines are darker.
scale_color_manual(values = colorspace::darken(met.brewer("Nattier")[5:1], 0.2)) +
scale_fill_manual(values = colorspace::lighten(met.brewer("Nattier")[5:1], 0.2)) +
# Create small multiples by country
facet_wrap(~geo, nrow = 1) +
# We can even add Markdown in our labels. The * in the subtitles mean italics. But we have to tell ggplot that subtitle should be rendered as markdown in the theme below!!
labs(x = NULL, y = NULL,
title = "Looking for a job",
subtitle = "Unemployment rates 2005-2023, *seasonally adjusted*",
caption = "Data: Eurostat. Figure: @matschnetzer") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_blank(),
axis.text = element_text(family = "Roboto Condensed"),
plot.title = element_text(family = "Oswald", size = 24),
# Subtitle should be rendered as markdown (from ggtext package) rather than element_text!
plot.subtitle = element_markdown(family = "Roboto Condensed", color = "gray40",
size = 14, margin = margin(b = 1, unit = "lines")),
plot.caption = element_text(family = "Roboto Condensed", color = "gray40", size = 7,
margin = margin(t = 1, unit = "lines")),
plot.title.position = "plot",
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linewidth = 0.2),
panel.spacing.x = unit(1, "lines"))
